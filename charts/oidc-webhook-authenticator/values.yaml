# SPDX-FileCopyrightText: 2021 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

global:
  certManager:
    enabled: false

application:
  enabled: true
  virtualGarden:
    enabled: false
    user:
      name: ""

  webhookConfig:
    # CA bundle used to verify the webhook server certificate.
    # If global.certManager.enabled is set to `true` then `caBundle` value will be ignored.
    caBundle: |
      -----BEGIN CERTIFICATE-----
      ...
      -----END CERTIFICATE-----

runtime:
  enabled: true
  replicaCount: 1

  image:
    repository: europe-docker.pkg.dev/gardener-project/public/gardener/oidc-webhook-authenticator
    tag: latest
    pullPolicy: IfNotPresent
  imagePullSecrets: []

  autoscaling:
    hpa:
      enabled: false
      minReplicas: 1
      maxReplicas: 3
      cpuTargetAverageUtilization: 80

  webhookConfig:
    # If global.certManager.enabled is set to `true` then configurations in the `tls` section will be ignored.
    tls:
      crt: |
        -----BEGIN CERTIFICATE-----
        ...
        -----END CERTIFICATE-----
      key: |
        -----BEGIN RSA PRIVATE KEY-----
        ...
        -----END RSA PRIVATE KEY-----

  # Kubeconfig to the target cluster. In-cluster configuration will be used if not specified.
  # If automountServiceAccountToken is set to `true` then this value is required because in-cluster configuration will not work.
  kubeconfig:

  auth:
    # If set, any request should present a client certificate signed by one of the authorities in the client CA bundle.
    # Paths listed in authenticationAlwaysAllowPaths do not require authentication.
    # clientCABundle: |
    #   -----BEGIN CERTIFICATE-----
    #   ...
    #   -----END CERTIFICATE-----

    # A list of HTTP paths to skip during authentication.
    authenticationAlwaysAllowPaths:
    - /livez
    - /readyz
    - /healthz
    - /webhooks/validating
    # - /metrics
    # - /validate-token

  server:
    address: ""
    port: 10443

  resyncPeriod: 30m
  resources:
    requests:
      cpu: 100m
      memory: 64Mi

  automountServiceAccountToken: true

  serviceAccountTokenVolumeProjection:
    enabled: false
    expirationSeconds: 1800
    audience: ""

  additionalLabels:
    deployment: {}
    hpa: {}
  additionalAnnotations:
    service: {}

  # If set the oidc-webhook-authenticator service will have this cluster IP assigned
  clusterIP: ""
